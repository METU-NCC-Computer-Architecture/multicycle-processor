|divider
quotient[0] <= quotient[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[1] <= quotient[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[2] <= quotient[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[3] <= quotient[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[4] <= quotient[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[5] <= quotient[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[6] <= quotient[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[7] <= quotient[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
remainder[0] <= dividend_copy[0].DB_MAX_OUTPUT_PORT_TYPE
remainder[1] <= dividend_copy[1].DB_MAX_OUTPUT_PORT_TYPE
remainder[2] <= dividend_copy[2].DB_MAX_OUTPUT_PORT_TYPE
remainder[3] <= dividend_copy[3].DB_MAX_OUTPUT_PORT_TYPE
remainder[4] <= dividend_copy[4].DB_MAX_OUTPUT_PORT_TYPE
remainder[5] <= dividend_copy[5].DB_MAX_OUTPUT_PORT_TYPE
remainder[6] <= dividend_copy[6].DB_MAX_OUTPUT_PORT_TYPE
remainder[7] <= dividend_copy[7].DB_MAX_OUTPUT_PORT_TYPE
ready <= WideNor0.DB_MAX_OUTPUT_PORT_TYPE
dividend[0] => dividend_copy.DATAA
dividend[0] => Add0.IN16
dividend[1] => dividend_copy.DATAA
dividend[1] => Add0.IN15
dividend[2] => dividend_copy.DATAA
dividend[2] => Add0.IN14
dividend[3] => dividend_copy.DATAA
dividend[3] => Add0.IN13
dividend[4] => dividend_copy.DATAA
dividend[4] => Add0.IN12
dividend[5] => dividend_copy.DATAA
dividend[5] => Add0.IN11
dividend[6] => dividend_copy.DATAA
dividend[6] => Add0.IN10
dividend[7] => dividend_copy.OUTPUTSELECT
dividend[7] => dividend_copy.OUTPUTSELECT
dividend[7] => dividend_copy.OUTPUTSELECT
dividend[7] => dividend_copy.OUTPUTSELECT
dividend[7] => dividend_copy.OUTPUTSELECT
dividend[7] => dividend_copy.OUTPUTSELECT
dividend[7] => dividend_copy.OUTPUTSELECT
dividend[7] => dividend_copy.OUTPUTSELECT
dividend[7] => sign_flag.DATAA
dividend[7] => Add0.IN9
dividend[7] => sign_flag.DATAB
divider[0] => divider_copy.DATAA
divider[1] => divider_copy.DATAA
divider[2] => divider_copy.DATAA
divider[3] => divider_copy.DATAA
divider[4] => divider_copy.DATAA
divider[5] => divider_copy.DATAA
divider[6] => divider_copy.DATAA
divider[7] => divider_comp.OUTPUTSELECT
divider[7] => divider_comp.OUTPUTSELECT
divider[7] => divider_comp.OUTPUTSELECT
divider[7] => divider_comp.OUTPUTSELECT
divider[7] => divider_comp.OUTPUTSELECT
divider[7] => divider_comp.OUTPUTSELECT
divider[7] => divider_comp.OUTPUTSELECT
divider[7] => divider_comp.OUTPUTSELECT
divider[7] => divider_copy.OUTPUTSELECT
divider[7] => divider_copy.OUTPUTSELECT
divider[7] => divider_copy.OUTPUTSELECT
divider[7] => divider_copy.OUTPUTSELECT
divider[7] => divider_copy.OUTPUTSELECT
divider[7] => divider_copy.OUTPUTSELECT
divider[7] => divider_copy.OUTPUTSELECT
divider[7] => divider_copy.OUTPUTSELECT
divider[7] => sign_flag.OUTPUTSELECT
start => always0.IN1
clk => divider_copy[0].CLK
clk => divider_copy[1].CLK
clk => divider_copy[2].CLK
clk => divider_copy[3].CLK
clk => divider_copy[4].CLK
clk => divider_copy[5].CLK
clk => divider_copy[6].CLK
clk => divider_copy[7].CLK
clk => divider_copy[8].CLK
clk => divider_copy[9].CLK
clk => divider_copy[10].CLK
clk => divider_copy[11].CLK
clk => divider_copy[12].CLK
clk => divider_copy[13].CLK
clk => divider_copy[14].CLK
clk => divider_copy[15].CLK
clk => divider_comp[0].CLK
clk => divider_comp[1].CLK
clk => divider_comp[2].CLK
clk => divider_comp[3].CLK
clk => divider_comp[4].CLK
clk => divider_comp[5].CLK
clk => divider_comp[6].CLK
clk => divider_comp[7].CLK
clk => dividend_copy[0].CLK
clk => dividend_copy[1].CLK
clk => dividend_copy[2].CLK
clk => dividend_copy[3].CLK
clk => dividend_copy[4].CLK
clk => dividend_copy[5].CLK
clk => dividend_copy[6].CLK
clk => dividend_copy[7].CLK
clk => dividend_copy[8].CLK
clk => dividend_copy[9].CLK
clk => dividend_copy[10].CLK
clk => dividend_copy[11].CLK
clk => dividend_copy[12].CLK
clk => dividend_copy[13].CLK
clk => dividend_copy[14].CLK
clk => dividend_copy[15].CLK
clk => sign_flag.CLK
clk => quotient[0]~reg0.CLK
clk => quotient[1]~reg0.CLK
clk => quotient[2]~reg0.CLK
clk => quotient[3]~reg0.CLK
clk => quotient[4]~reg0.CLK
clk => quotient[5]~reg0.CLK
clk => quotient[6]~reg0.CLK
clk => quotient[7]~reg0.CLK
clk => bit[0].CLK
clk => bit[1].CLK
clk => bit[2].CLK
clk => bit[3].CLK
clk => bit[4].CLK
clk => bit[5].CLK


