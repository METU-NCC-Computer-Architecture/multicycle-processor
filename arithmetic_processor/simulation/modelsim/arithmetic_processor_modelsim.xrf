vendor_name = ModelSim
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/data.mif
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/instructions.mif
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/Multiplier.v
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/ALU.v
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/ap_function.v
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/ap_function.vwf
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/DFF8.v
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/DFF8.vwf
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/MUX4TO1.v
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/MUX4TO1.vwf
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/Datapath.bdf
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/SHIFTREG8.v
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/SHIFTREG8.vwf
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/SHIFTREGS.bdf
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/SHIFTREGS.vwf
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/MUX2TO1.v
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/DFF1.v
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/ControlUnit.v
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/ControlUnit.vwf
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/MUX2TO1_8BIT.v
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/Datapath.vwf
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/arithmetic_processor.sdc
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/Datapath_Multiplication.vwf
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/RegisterFile8x8.v
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/RegisterFile8x8.vwf
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/INSTMEM.qip
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/INSTMEM.v
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/DATAMEM.qip
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/DATAMEM.v
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/SIGNEXT6T08.v
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/SIGNEXT6T08.vwf
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/SIGNEXT8T016.v
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/PLUS1_ADDER.v
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/MUX2TO1_3BIT.v
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/MUX2TO1_16BIT.v
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/ROUTER.v
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/ROUTER.vwf
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/PCREG.v
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/MUX2TO1_10BIT.v
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/SIGNEXT8T010.v
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/MUX4TO1_10BIT.v
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/tst.bdf
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/CONCANITATING.v
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/Datapath_SLT.vwf
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/Datapath_MUL.vwf
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/Datapath_BREQ.vwf
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/Datapath_BRNE.vwf
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/DFF2.v
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/Datapath_DMADDR.vwf
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/CPU.bdf
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/Front_Panel.v
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/REG16.v
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/CPU.vwf
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/MUX4TO1_10BIT_PC.v
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/divider.v
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/divider.vwf
source_file = 1, D:/Github/METU-NCC-Computer-Architecture/multicycle-processor/arithmetic_processor/db/arithmetic_processor.cbx.xml
design_name = divider
instance = comp, \Add2~14 , Add2~14, divider, 1
instance = comp, \Add2~20 , Add2~20, divider, 1
instance = comp, \Add2~22 , Add2~22, divider, 1
instance = comp, \Add2~26 , Add2~26, divider, 1
instance = comp, \Add0~9 , Add0~9, divider, 1
instance = comp, \dividend_copy[13] , dividend_copy[13], divider, 1
instance = comp, \dividend_copy[11] , dividend_copy[11], divider, 1
instance = comp, \dividend_copy[10] , dividend_copy[10], divider, 1
instance = comp, \divider_copy[6] , divider_copy[6], divider, 1
instance = comp, \divider_copy[5] , divider_copy[5], divider, 1
instance = comp, \divider_copy[4] , divider_copy[4], divider, 1
instance = comp, \divider_copy[3] , divider_copy[3], divider, 1
instance = comp, \always0~0 , always0~0, divider, 1
instance = comp, \always0~2 , always0~2, divider, 1
instance = comp, \dividend_copy~9 , dividend_copy~9, divider, 1
instance = comp, \dividend_copy~11 , dividend_copy~11, divider, 1
instance = comp, \dividend_copy~12 , dividend_copy~12, divider, 1
instance = comp, \divider_copy~7 , divider_copy~7, divider, 1
instance = comp, \divider_copy~8 , divider_copy~8, divider, 1
instance = comp, \divider_copy~9 , divider_copy~9, divider, 1
instance = comp, \divider_copy~10 , divider_copy~10, divider, 1
instance = comp, \sign_flag~0 , sign_flag~0, divider, 1
instance = comp, \dividend[1]~I , dividend[1], divider, 1
instance = comp, \dividend[3]~I , dividend[3], divider, 1
instance = comp, \dividend[5]~I , dividend[5], divider, 1
instance = comp, \dividend[6]~I , dividend[6], divider, 1
instance = comp, \divider[4]~I , divider[4], divider, 1
instance = comp, \divider[0]~I , divider[0], divider, 1
instance = comp, \clk~I , clk, divider, 1
instance = comp, \clk~clkctrl , clk~clkctrl, divider, 1
instance = comp, \start~I , start, divider, 1
instance = comp, \bit~1 , bit~1, divider, 1
instance = comp, \bit[4] , bit[4], divider, 1
instance = comp, \bit~0 , bit~0, divider, 1
instance = comp, \bit[5] , bit[5], divider, 1
instance = comp, \bit~4 , bit~4, divider, 1
instance = comp, \bit[0] , bit[0], divider, 1
instance = comp, \bit~2 , bit~2, divider, 1
instance = comp, \bit[2] , bit[2], divider, 1
instance = comp, \WideNor0~0 , WideNor0~0, divider, 1
instance = comp, \always0~3 , always0~3, divider, 1
instance = comp, \bit~3 , bit~3, divider, 1
instance = comp, \bit[1] , bit[1], divider, 1
instance = comp, \Add3~0 , Add3~0, divider, 1
instance = comp, \bit[3] , bit[3], divider, 1
instance = comp, \always0~1 , always0~1, divider, 1
instance = comp, \divider[7]~I , divider[7], divider, 1
instance = comp, \divider[6]~I , divider[6], divider, 1
instance = comp, \divider_copy~0 , divider_copy~0, divider, 1
instance = comp, \divider_copy[13] , divider_copy[13], divider, 1
instance = comp, \divider[5]~I , divider[5], divider, 1
instance = comp, \divider_copy~1 , divider_copy~1, divider, 1
instance = comp, \divider_copy[12] , divider_copy[12], divider, 1
instance = comp, \divider_copy~2 , divider_copy~2, divider, 1
instance = comp, \divider_copy[11] , divider_copy[11], divider, 1
instance = comp, \divider[3]~I , divider[3], divider, 1
instance = comp, \divider_copy~3 , divider_copy~3, divider, 1
instance = comp, \divider_copy[10] , divider_copy[10], divider, 1
instance = comp, \divider[2]~I , divider[2], divider, 1
instance = comp, \divider_copy~4 , divider_copy~4, divider, 1
instance = comp, \divider_copy[9] , divider_copy[9], divider, 1
instance = comp, \divider[1]~I , divider[1], divider, 1
instance = comp, \divider_copy~5 , divider_copy~5, divider, 1
instance = comp, \divider_copy[8] , divider_copy[8], divider, 1
instance = comp, \divider_copy~6 , divider_copy~6, divider, 1
instance = comp, \divider_copy[7] , divider_copy[7], divider, 1
instance = comp, \dividend[7]~I , dividend[7], divider, 1
instance = comp, \dividend[4]~I , dividend[4], divider, 1
instance = comp, \dividend[2]~I , dividend[2], divider, 1
instance = comp, \dividend[0]~I , dividend[0], divider, 1
instance = comp, \Add0~2 , Add0~2, divider, 1
instance = comp, \Add0~3 , Add0~3, divider, 1
instance = comp, \Add0~5 , Add0~5, divider, 1
instance = comp, \Add0~7 , Add0~7, divider, 1
instance = comp, \Add0~11 , Add0~11, divider, 1
instance = comp, \Add0~13 , Add0~13, divider, 1
instance = comp, \dividend_copy[6]~5 , dividend_copy[6]~5, divider, 1
instance = comp, \dividend_copy[5]~4 , dividend_copy[5]~4, divider, 1
instance = comp, \dividend_copy[4]~3 , dividend_copy[4]~3, divider, 1
instance = comp, \dividend_copy[3]~2 , dividend_copy[3]~2, divider, 1
instance = comp, \dividend_copy[3]~feeder , dividend_copy[3]~feeder, divider, 1
instance = comp, \divider_copy~11 , divider_copy~11, divider, 1
instance = comp, \divider_copy[2] , divider_copy[2], divider, 1
instance = comp, \divider_copy~12 , divider_copy~12, divider, 1
instance = comp, \divider_copy[1] , divider_copy[1], divider, 1
instance = comp, \divider_copy~13 , divider_copy~13, divider, 1
instance = comp, \divider_copy[0] , divider_copy[0], divider, 1
instance = comp, \Add2~0 , Add2~0, divider, 1
instance = comp, \Add2~2 , Add2~2, divider, 1
instance = comp, \Add2~4 , Add2~4, divider, 1
instance = comp, \Add2~6 , Add2~6, divider, 1
instance = comp, \dividend_copy[0]~7 , dividend_copy[0]~7, divider, 1
instance = comp, \dividend_copy[3] , dividend_copy[3], divider, 1
instance = comp, \Add2~8 , Add2~8, divider, 1
instance = comp, \dividend_copy[4] , dividend_copy[4], divider, 1
instance = comp, \Add2~10 , Add2~10, divider, 1
instance = comp, \dividend_copy[5] , dividend_copy[5], divider, 1
instance = comp, \Add2~12 , Add2~12, divider, 1
instance = comp, \dividend_copy[6] , dividend_copy[6], divider, 1
instance = comp, \Add2~16 , Add2~16, divider, 1
instance = comp, \dividend_copy~14 , dividend_copy~14, divider, 1
instance = comp, \dividend_copy[8] , dividend_copy[8], divider, 1
instance = comp, \Add2~18 , Add2~18, divider, 1
instance = comp, \dividend_copy~13 , dividend_copy~13, divider, 1
instance = comp, \dividend_copy[9] , dividend_copy[9], divider, 1
instance = comp, \Add2~24 , Add2~24, divider, 1
instance = comp, \dividend_copy~10 , dividend_copy~10, divider, 1
instance = comp, \dividend_copy[12] , dividend_copy[12], divider, 1
instance = comp, \Add2~28 , Add2~28, divider, 1
instance = comp, \dividend_copy~8 , dividend_copy~8, divider, 1
instance = comp, \dividend_copy[14] , dividend_copy[14], divider, 1
instance = comp, \Add2~30 , Add2~30, divider, 1
instance = comp, \Add4~0 , Add4~0, divider, 1
instance = comp, \quotient[0]~8 , quotient[0]~8, divider, 1
instance = comp, \quotient[0]~reg0 , quotient[0]~reg0, divider, 1
instance = comp, \quotient[1]~10 , quotient[1]~10, divider, 1
instance = comp, \quotient[1]~reg0 , quotient[1]~reg0, divider, 1
instance = comp, \quotient[2]~12 , quotient[2]~12, divider, 1
instance = comp, \quotient[2]~reg0 , quotient[2]~reg0, divider, 1
instance = comp, \quotient[3]~14 , quotient[3]~14, divider, 1
instance = comp, \quotient[3]~reg0 , quotient[3]~reg0, divider, 1
instance = comp, \quotient[4]~16 , quotient[4]~16, divider, 1
instance = comp, \quotient[4]~reg0 , quotient[4]~reg0, divider, 1
instance = comp, \quotient[5]~18 , quotient[5]~18, divider, 1
instance = comp, \quotient[5]~reg0 , quotient[5]~reg0, divider, 1
instance = comp, \quotient[6]~20 , quotient[6]~20, divider, 1
instance = comp, \quotient[6]~reg0 , quotient[6]~reg0, divider, 1
instance = comp, \quotient[7]~22 , quotient[7]~22, divider, 1
instance = comp, \quotient[7]~reg0 , quotient[7]~reg0, divider, 1
instance = comp, \Add0~0 , Add0~0, divider, 1
instance = comp, \dividend_copy[0] , dividend_copy[0], divider, 1
instance = comp, \dividend_copy[1]~0 , dividend_copy[1]~0, divider, 1
instance = comp, \dividend_copy[1] , dividend_copy[1], divider, 1
instance = comp, \dividend_copy[2]~1 , dividend_copy[2]~1, divider, 1
instance = comp, \dividend_copy[2]~feeder , dividend_copy[2]~feeder, divider, 1
instance = comp, \dividend_copy[2] , dividend_copy[2], divider, 1
instance = comp, \dividend_copy[7]~6 , dividend_copy[7]~6, divider, 1
instance = comp, \Add0~15 , Add0~15, divider, 1
instance = comp, \Add0~17 , Add0~17, divider, 1
instance = comp, \dividend_copy[7] , dividend_copy[7], divider, 1
instance = comp, \quotient[0]~I , quotient[0], divider, 1
instance = comp, \quotient[1]~I , quotient[1], divider, 1
instance = comp, \quotient[2]~I , quotient[2], divider, 1
instance = comp, \quotient[3]~I , quotient[3], divider, 1
instance = comp, \quotient[4]~I , quotient[4], divider, 1
instance = comp, \quotient[5]~I , quotient[5], divider, 1
instance = comp, \quotient[6]~I , quotient[6], divider, 1
instance = comp, \quotient[7]~I , quotient[7], divider, 1
instance = comp, \remainder[0]~I , remainder[0], divider, 1
instance = comp, \remainder[1]~I , remainder[1], divider, 1
instance = comp, \remainder[2]~I , remainder[2], divider, 1
instance = comp, \remainder[3]~I , remainder[3], divider, 1
instance = comp, \remainder[4]~I , remainder[4], divider, 1
instance = comp, \remainder[5]~I , remainder[5], divider, 1
instance = comp, \remainder[6]~I , remainder[6], divider, 1
instance = comp, \remainder[7]~I , remainder[7], divider, 1
instance = comp, \ready~I , ready, divider, 1
